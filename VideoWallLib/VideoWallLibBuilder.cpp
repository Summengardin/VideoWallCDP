/**
VideoWallLibBuilder implementation.
*/

#include "CameraPort.h"
#include "Camera.h"
#include "SourceOrchestrator.h"
#include "LayoutPort.h"
#include "Layout.h"
#include "TilePort.h"
#include "Tile.h"
#include "OSDPort.h"
#include "OSDText.h"
#include "OSD.h"
#include "MQTTHandler.h"
#include "MQTTTopic.h"
#include "VideoWallLibBuilder.h"

using namespace VideoWallLib;

/*!
  \inmodule VideoWallLib
  \namespace VideoWallLib

  \brief Contains VideoWallLib implementation classes.
  Click into each class to see the documentation for that class, or search for a keyword in the help documentation.
*/

/**
\internal
Do not edit. Autogenerated Builder constructor.
*/
VideoWallLibBuilder::VideoWallLibBuilder(const char* libName)
    : CDPBuilder(libName, __DATE__ " " __TIME__)
{
}

/**
\internal
Do not edit. Autogenerated Builder CDPComponent factory function.
*/
CDPComponent* VideoWallLibBuilder::CreateNewComponent(const std::string& type)
{
    if (type=="VideoWallLib.Camera")
        return new Camera;
    
    
    if (type=="VideoWallLib.SourceOrchestrator")
        return new SourceOrchestrator;
    
    if (type=="VideoWallLib.Layout")
        return new Layout;
    
    if (type=="VideoWallLib.Tile")
        return new Tile;
    
    
    if (type=="VideoWallLib.OSDText")
        return new OSDText;
    
    if (type=="VideoWallLib.OSD")
        return new OSD;

    if (type=="VideoWallLib.MQTTHandler")
        return new MQTTHandler;

    if (type=="VideoWallLib.MQTTTopic")
        return new MQTTTopic;
    return CDPBuilder::CreateNewComponent(type);
}

/**
\internal
Do not edit. Autogenerated Builder CDPBaseObject factory function.
*/
CDPBaseObject* VideoWallLibBuilder::CreateNewCDPOperator(const std::string& modelName, const std::string& type, const CDPPropertyBase* inputProperty)
{

    return CDPBuilder::CreateNewCDPOperator(modelName, type, inputProperty);
}

/**
\internal
Do not edit. Autogenerated Builder CDPObject factory function.
*/
CDPObject* VideoWallLibBuilder::CreateNewObject(const std::string& type)
{
    if (type=="VideoWallLib.CameraPort")
        return new CameraPort;
    
    
    
    
    if (type=="VideoWallLib.LayoutPort")
        return new LayoutPort;
    
    if (type=="VideoWallLib.TilePort")
        return new TilePort;
    
    if (type=="VideoWallLib.OSDPort")
        return new OSDPort;
    
    return CDPBuilder::CreateNewObject(type);
}

/**
\internal
CDPNode factory function.
*/
CDP::StudioAPI::CDPNode* VideoWallLibBuilder::CreateNewCDPNode(const std::string& type)
{
    return CDPBuilder::CreateNewCDPNode(type);
}
