<Component Model="CDPComponent" Name="PointTracker" src="Components/PointTracker.xml" Description="CDPComponent can be used to create a container task in applications or other components with its own thread (or in same thread as parent if Priority, ThreadGroup match) and cyclic frequency to contain no-code logic.
    It is also possible to create a new C++ based component for code based complex work in a Library type project. User must then use &apos;Add New...&apos; Wizard on Library root item. Components communicate by exchanging Messages, Port-, Signal- values, both inside applications and between applications.">
  <SchedulingOrder>TopDown</SchedulingOrder>
  <SchedulingGroup>Default</SchedulingGroup>
  <fs>10</fs>
  <Status>0</Status>

  <Signals>
    <Signal Description="Process run time each s." Input="0" Model="CDPSignal&lt;double&gt;" Name="Process Timer" Type="double" Unit="s/s"></Signal>
    <Signal Description="Process interval [s]." Input="0" Model="CDPSignal&lt;double&gt;" Name="Process Period" Type="double" Unit="s"></Signal>
  </Signals>

  <Alarms>
    <Alarm Description="A component was suspended!" Name="Component Suspended" Text="Component was suspended!"></Alarm>
    <Alarm Description="Alarm is triggered (with Text containing the list of errors) when some node of the component (like operator) has configuration fault." Level="Error" Name="ConfigurationFaults"></Alarm>
  </Alarms>

  <Subcomponents>
    <Subcomponent Model="Kinematics.DHChain" Name="CameraModel" src="Components/PointTracker/CameraModel.xml"></Subcomponent>
    <Subcomponent Model="CDPComponent" Name="Regulator" src="Components/PointTracker/Regulator.xml"></Subcomponent>
    <Subcomponent Model="VideoWallLib.CameraMotionReferenceCalculation" Name="CameraMotionReferenceCalculation" src="Components/PointTracker/CameraMotionReferenceCalculation.xml"></Subcomponent></Subcomponents>
  

  <Ports></Ports>
  
</Component>